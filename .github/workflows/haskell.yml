name: Haskell CI

on:
  push:
    branches: [ 'master', 'ci' ]
  pull_request:
    branches: [ 'master' ]

env:
  autoconf_ver: 2.69

jobs:
  autoconf:
    runs-on: ubuntu-latest
    container: ubuntu:22.10

    steps:
    - uses: actions/checkout@v3
    - name: install autoconf
      run: |
        apt-get update -y -qq
        apt-get install -y -qq build-essential autoconf${{ env.autoconf_ver }}
    - name: run autoreconf
      run: |
        autoreconf${{ env.autoconf_ver }} -fi
    - uses: actions/upload-artifact@v3
      with:
        name: configure
        path: |
          configure
          include/HsNetworkConfig.h.in

  sdist:
    runs-on: ubuntu-latest
    needs: autoconf

    steps:
    - uses: actions/checkout@v3
    - uses: haskell/actions/setup@v2
      with:
        cabal-version: '3.4'

    - uses: actions/download-artifact@v3
      with:
        name: configure

    - name: run sdist
      run: |
        cabal sdist

    - uses: actions/upload-artifact@v3
      with:
        name: dist-tarball
        path: dist-newstyle/sdist/network-*

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist-newstyle/sdist/network-*

  build:
    runs-on: ${{ matrix.os }}
    needs: autoconf

    strategy:
      fail-fast: false
      matrix:
        os:  [ 'ubuntu-latest', 'macOS-latest', 'windows-latest' ]
        ghc: [ '8.10', '9.0', '9.2' ]

    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.8'

    - uses: actions/download-artifact@v3
      with:
        name: configure

    - name: Cache
      uses: actions/cache@v3
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests --disable-benchmarks

    - name: Build
      run: cabal build --enable-tests --disable-benchmarks all

    - name: Run tests
      run: cabal test --test-show-details=streaming

    - name: Run doctest
      if: ${{ runner.os == 'Linux' }}
      run: |
        cabal install doctest --overwrite-policy=always
        cabal repl --build-depends=QuickCheck --with-ghc=doctest

    # check windows can generate autoconf too
    - uses: msys2/setup-msys2@v2
      if: matrix.os == 'windows-latest'
      with:
        update: true
        install: autoconf
    - if: matrix.os == 'windows-latest'
      name: autoreconf
      shell: msys2 {0}
      run: |
        rm configure include/HsNetworkConfig.h.in
        autoreconf -i
    - if: matrix.os == 'windows-latest'
      name: Build
      run: |
        cabal clean
        cabal build --enable-tests --disable-benchmarks all
