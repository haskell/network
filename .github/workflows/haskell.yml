name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc: ['8.0', '8.2', '8.4', '8.6', '8.8', '8.10']
        exclude:
        - os: windows-latest
          ghc: "8.0"
        - os: windows-latest
          ghc: "8.2"
        - os: windows-latest
          ghc: "8.4"
        - os: windows-latest
          ghc: "8.6"
        - os: windows-latest
          ghc: "8.10"
        - os: macOS-latest
          ghc: "8.0"
        - os: macOS-latest
          ghc: "8.2"
        - os: macOS-latest
          ghc: "8.4"
        - os: macOS-latest
          ghc: "8.6"
        - os: macOS-latest
          ghc: "8.8"

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1.1.3
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.2'

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - uses: msys2/setup-msys2@v2
      if: matrix.os == 'windows-latest'
      with:
        update: true
        install: autoconf
    - if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: autoreconf -i
    - if: matrix.os != 'windows-latest'
      run: |
        autoreconf -i
        sh ./enable_doctest.sh

    - name: Install dependencies
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests --disable-benchmarks
    - name: Build
      run: |
        cabal build --enable-tests --disable-benchmarks all
    - name: Run tests
      run: cabal test all
